# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2018-05-29 06:01
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import time


class Migration(migrations.Migration):

    dependencies = [
        ('targets', '0003_auto_20180529_1301'),
        ('sadmin', '0002_auto_20180529_1301'),
        ('agents', '0004_auto_20180402_1710'),
    ]

    operations = [
        migrations.CreateModel(
            name='SecurityEventsModels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('HOST', 'host'), ('SERVICE', 'service'), ('VULNERABLITY', 'vulnerablity'), ('SESSION', 'session'), ('BLACKLIST', 'blacklist'), ('MALWARE', 'malware'), ('MONITOR', 'realtime monitor')], default='IP ADDRESS', max_length=30)),
                ('alert', models.CharField(choices=[('NEW_DEVICE', 'New device detected'), ('DEVICE_TURN_OFF', 'Device is turn off'), ('DEVICE_CHANGE_IP', 'Device is changed ip'), ('CANNOT_CONNECT_TO_TARGET', 'Cannot connect to target scan.'), ('NEW_SERVICE', 'New service detected'), ('SERVICE_CHANGED', 'Service is changed'), ('SERVICE_CLOSED', 'Service is closed'), ('SERVICE_VERSION_TOO_OLD', 'Service verion is too old'), ('NEW_VULNERABILITY', 'New vulnerability'), ('VULNERABILITY_IS_NOT_FIX', 'Vulnerability is not fix'), ('NEW_SESSION', 'New session'), ('BKACLIST_DETECTED', 'Blackist detected'), ('MALWARE_DETECTED', 'Malware is detected'), ('WEBSITE_CONTENT_DETECTED', 'Website content is change detected'), ('SERVER_STATUS', 'Server status'), ('SERVICE_STATUS', 'Services status')], default='NEW_DEVICE', max_length=50)),
                ('severity', models.IntegerField(choices=[(0, 'info'), (1, 'low'), (2, 'medium'), (3, 'high'), (4, 'critical')], default=1)),
            ],
            options={
                'db_table': 'security_events',
            },
        ),
        migrations.CreateModel(
            name='SoftwareLastVersionModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=100)),
                ('software_name', models.CharField(default='', max_length=100, null=True)),
                ('homepage', models.CharField(blank=True, max_length=200, null=True)),
                ('version', models.CharField(blank=True, max_length=25, null=True)),
            ],
            options={
                'db_table': 'software_last_version',
            },
        ),
        migrations.CreateModel(
            name='TargetTechnologyVersionModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=100)),
                ('software_name', models.CharField(default='', max_length=100, null=True)),
                ('version', models.CharField(blank=True, max_length=25, null=True)),
            ],
            options={
                'db_table': 'software_current_version',
            },
        ),
        migrations.CreateModel(
            name='WebsiteMonitorContentChangeModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monitor_time', models.IntegerField(default=time.time)),
                ('old_contents', django.contrib.postgres.fields.jsonb.JSONField(default={})),
                ('new_contents', django.contrib.postgres.fields.jsonb.JSONField(default={})),
            ],
            options={
                'db_table': 'website_content_changed',
            },
        ),
        migrations.CreateModel(
            name='WebsiteMonitorContentStatusModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monitor_time', models.IntegerField(default=time.time)),
                ('is_changed', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'website_content_monitor_status',
            },
        ),
        migrations.RemoveField(
            model_name='websitemonitorcontentmodel',
            name='new_content',
        ),
        migrations.RemoveField(
            model_name='websitemonitorcontentmodel',
            name='old_content',
        ),
        migrations.RemoveField(
            model_name='websitemonitorcontentmodel',
            name='url_monitor',
        ),
        migrations.RemoveField(
            model_name='websitestaticcontentmodel',
            name='url_monitor',
        ),
        migrations.RemoveField(
            model_name='websitecontentmodel',
            name='attrib',
        ),
        migrations.RemoveField(
            model_name='websitecontentmodel',
            name='children_counts',
        ),
        migrations.RemoveField(
            model_name='websitecontentmodel',
            name='crawler_time',
        ),
        migrations.RemoveField(
            model_name='websitecontentmodel',
            name='level',
        ),
        migrations.RemoveField(
            model_name='websitecontentmodel',
            name='parent',
        ),
        migrations.RemoveField(
            model_name='websitecontentmodel',
            name='position',
        ),
        migrations.RemoveField(
            model_name='websitecontentmodel',
            name='tag',
        ),
        migrations.RemoveField(
            model_name='websitesecurityalertmodel',
            name='category',
        ),
        migrations.RemoveField(
            model_name='websitesecurityalertmodel',
            name='stauts',
        ),
        # migrations.AddField(
        #     model_name='crawldatamodel',
        #     name='website',
        #     field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='crawls', to='agents.HostsModel'),
        # ),
        # migrations.AddField(
        #     model_name='hostservicesmodel',
        #     name='host',
        #     field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='services', to='agents.HostsModel'),
        # ),
        # migrations.AddField(
        #     model_name='hostsmodel',
        #     name='task',
        #     field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hosts', to='targets.TasksModel'),
        # ),
        migrations.AddField(
            model_name='hoststatisticsmodel',
            name='is_website_content_alert',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='hoststatisticsmodel',
            name='phishing_domain_count',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='hoststatisticsmodel',
            name='security_alert_count',
            field=models.IntegerField(default=0),
        ),
        # migrations.AddField(
        #     model_name='hostvulnerabilitymodel',
        #     name='host',
        #     field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vulns', to='agents.HostsModel'),
        # ),
        # migrations.AddField(
        #     model_name='hostvulnerabilitymodel',
        #     name='plugin',
        #     field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vulns', to='sadmin.PluginsModel'),
        # ),
        # migrations.AddField(
        #     model_name='hostvulnerabilitymodel',
        #     name='target',
        #     field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vulns', to='targets.TargetsModel'),
        # ),
        # migrations.AddField(
        #     model_name='hostvulnerabilitymodel',
        #     name='task',
        #     field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vulns', to='targets.TasksModel'),
        # ),
        # migrations.AddField(
        #     model_name='hostvulnerabilitymodel',
        #     name='vulnerability',
        #     field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hosts', to='sadmin.VulnerabilityModel'),
        # ),
        # migrations.AddField(
        #     model_name='scansmodel',
        #     name='plugin',
        #     field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scans', to='sadmin.PluginsModel'),
        # ),
        # migrations.AddField(
        #     model_name='scansmodel',
        #     name='task',
        #     field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scans', to='targets.TasksModel'),
        # ),
        migrations.AddField(
            model_name='websitecontentmodel',
            name='crawler_count',
            field=models.IntegerField(default=1),
        ),
        migrations.AddField(
            model_name='websitecontentmodel',
            name='monitor_time',
            field=models.IntegerField(default=time.time),
        ),
        migrations.AddField(
            model_name='websitemonitorurl',
            name='content_type',
            field=models.CharField(default='html', max_length=30),
        ),
        migrations.AddField(
            model_name='websitemonitorurl',
            name='target',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='murls', to='targets.TargetsModel'),
        ),
        migrations.AddField(
            model_name='websitesecurityalertmodel',
            name='description',
            field=models.CharField(choices=[('NEW_DEVICE', 'Detect new device in your network.'), ('DEVICE_TURN_OFF', 'A device is turn off in your network.'), ('DEVICE_CHANGE_IP', 'Ip address of device is changed.'), ('CANNOT_CONNECT_TO_TARGET', 'Cannot connect to target scan.'), ('NEW_SERVICE', 'New service is open on your device.'), ('SERVICE_CHANGED', 'A service is change information.'), ('SERVICE_CLOSED', 'A service is closed on your device.'), ('SERVICE_VERSION_TOO_OLD', 'The version of service is too old.'), ('NEW_VULNERABILITY', ''), ('VULNERABILITY_IS_NOT_FIX', ''), ('NEW_SESSION', 'Penetration testing is successful. A new session is created.'), ('BKACLIST_DETECTED', 'Your domain is making blacklist by domain blacklists checker.'), ('MALWARE_DETECTED', 'A malware is detect in website link.'), ('WEBSITE_CONTENT_DETECTED', 'Website content is changed.'), ('SERVER_STATUS', 'server status'), ('SERVICE_STATUS', 'services status')], default='', max_length=500),
        ),
        migrations.AddField(
            model_name='websitesecurityalertmodel',
            name='name',
            field=models.CharField(default='', max_length=250),
        ),
        migrations.AddField(
            model_name='websitesecurityalertmodel',
            name='resolve',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='websitesecurityalertmodel',
            name='solution',
            field=models.CharField(choices=[('NEW_DEVICE', 'Please check list devices connected in your network.'), ('DEVICE_TURN_OFF', 'Please check your network connection with your device.'), ('DEVICE_CHANGE_IP', "Please check network connection if you don't setting dhcp."), ('CANNOT_CONNECT_TO_TARGET', 'Please check your network connection of your device and your targets.'), ('NEW_SERVICE', "Please check the service of your device is you don't open port."), ('SERVICE_CHANGED', "Please check the service of your device is you don't do this."), ('SERVICE_CLOSED', "Please check the service of your device is you don't close port."), ('SERVICE_VERSION_TOO_OLD', 'Please update the last version of software.'), ('NEW_VULNERABILITY', ''), ('VULNERABILITY_IS_NOT_FIX', ''), ('NEW_SESSION', ''), ('BKACLIST_DETECTED', 'Please check mail or website content or contact domain blacklists checker with to unblock.'), ('MALWARE_DETECTED', 'Please check website content source security.'), ('WEBSITE_CONTENT_DETECTED', ''), ('SERVER_STATUS', 'server status'), ('SERVICE_STATUS', 'services status')], default='', max_length=500),
        ),
        migrations.AddField(
            model_name='websitesecurityalertmodel',
            name='time_created',
            field=models.IntegerField(default=time.time),
        ),
        migrations.AddField(
            model_name='websitesecurityalertmodel',
            name='type',
            field=models.CharField(choices=[('VULNERABILITY', 'vulnerability'), ('ABNORMAL', 'Abnormal'), ('PENETRATION', 'penetration testing')], default='ABNORMAL', max_length=200),
        ),
        migrations.AlterField(
            model_name='serverconfigurationsmodel',
            name='website',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='config_vulns', to='agents.HostsModel'),
        ),
        migrations.AlterField(
            model_name='websiteblacklistcheckingmodel',
            name='website',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='blacklist', to='agents.HostsModel'),
        ),
        migrations.AlterField(
            model_name='websitecontentmodel',
            name='content',
            field=models.TextField(),
        ),
        migrations.AlterField(
            model_name='websitecontentmodel',
            name='url_monitor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scontents', to='agents.WebsiteMonitorUrl'),
        ),
        migrations.AlterField(
            model_name='websitedatabasesmodel',
            name='website',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='database', to='agents.HostsModel'),
        ),
        migrations.AlterField(
            model_name='websitegooglehackingdetectmodel',
            name='keyword',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='websites', to='agents.GoogleHackingKeywordModels'),
        ),
        migrations.AlterField(
            model_name='websitegooglehackingdetectmodel',
            name='website',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ghdb', to='agents.HostsModel'),
        ),
        migrations.AlterField(
            model_name='websitemonitorstatusmodel',
            name='ping_response',
            field=models.IntegerField(blank=True, default=0),
        ),
        migrations.AlterField(
            model_name='websitemonitorstatusmodel',
            name='web_load_response',
            field=models.IntegerField(blank=True, default=0),
        ),
        migrations.AlterField(
            model_name='websitemonitorstatusmodel',
            name='web_status',
            field=models.IntegerField(default=200),
        ),
        migrations.AlterField(
            model_name='websitemonitorstatusmodel',
            name='website',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mstatus', to='agents.HostsModel'),
        ),
        migrations.AlterField(
            model_name='websitemonitorurl',
            name='max_level',
            field=models.IntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='websitemonitorurl',
            name='url',
            field=models.CharField(default='', max_length=500),
        ),
        migrations.AlterField(
            model_name='websitephishingdomaindetectmodel',
            name='website',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='phishing', to='agents.HostsModel'),
        ),
        migrations.AlterField(
            model_name='websitesecurityalertmodel',
            name='host',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='msecurity', to='agents.HostsModel'),
        ),
        migrations.AlterField(
            model_name='websitesubdomainsmodel',
            name='website',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subdomains', to='agents.HostsModel'),
        ),
        migrations.AlterField(
            model_name='websitetechnologiesmodel',
            name='website',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='technologies', to='agents.HostsModel'),
        ),
        # migrations.AlterUniqueTogether(
        #     name='crawldatamodel',
        #     unique_together=set([('website', 'path')]),
        # ),
        # migrations.AlterUniqueTogether(
        #     name='hostservicesmodel',
        #     unique_together=set([('port', 'host')]),
        # ),
        # migrations.AlterUniqueTogether(
        #     name='hostsmodel',
        #     unique_together=set([('task', 'ip_addr')]),
        # ),
        # migrations.AlterUniqueTogether(
        #     name='hostvulnerabilitymodel',
        #     unique_together=set([('host', 'scanner_scan_id', 'scanner_vuln_id')]),
        # ),
        # migrations.AlterUniqueTogether(
        #     name='scansmodel',
        #     unique_together=set([('task', 'plugin')]),
        # ),
        # migrations.AlterUniqueTogether(
        #     name='serverconfigurationsmodel',
        #     unique_together=set([('website', 'description')]),
        # ),
        # migrations.AlterUniqueTogether(
        #     name='websiteblacklistcheckingmodel',
        #     unique_together=set([('website', 'type')]),
        # ),
        # migrations.AlterUniqueTogether(
        #     name='websitegooglehackingdetectmodel',
        #     unique_together=set([('website', 'keyword')]),
        # ),
        migrations.AlterUniqueTogether(
            name='websitemonitorurl',
            unique_together=set([('target', 'url', 'path')]),
        ),
        # migrations.AlterUniqueTogether(
        #     name='websitephishingdomaindetectmodel',
        #     unique_together=set([('website', 'domain')]),
        # ),
        # migrations.AlterUniqueTogether(
        #     name='websitesubdomainsmodel',
        #     unique_together=set([('subdomain', 'website')]),
        # ),
        # migrations.AlterUniqueTogether(
        #     name='websitetechnologiesmodel',
        #     unique_together=set([('website', 'technology')]),
        # ),
        migrations.AlterModelTable(
            name='websitesecurityalertmodel',
            table='security_event_alerts',
        ),
        migrations.DeleteModel(
            name='WebsiteMonitorContentModel',
        ),
        migrations.DeleteModel(
            name='WebsiteStaticContentModel',
        ),
        migrations.AddField(
            model_name='websitemonitorcontentstatusmodel',
            name='url_monitor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mcontents', to='agents.WebsiteMonitorUrl'),
        ),
        migrations.AddField(
            model_name='websitemonitorcontentchangemodel',
            name='mmonitor_status',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pages', to='agents.WebsiteMonitorContentStatusModel'),
        ),
        migrations.AddField(
            model_name='websitemonitorcontentchangemodel',
            name='url_monitor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='content_details', to='agents.WebsiteMonitorUrl'),
        ),
        migrations.AddField(
            model_name='targettechnologyversionmodel',
            name='host',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='technology_verions', to='agents.HostsModel'),
        ),
        migrations.AddField(
            model_name='targettechnologyversionmodel',
            name='target',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='technology_verions', to='targets.TargetsModel'),
        ),
        migrations.AlterUniqueTogether(
            name='softwarelastversionmodel',
            unique_together=set([('service_name', 'software_name')]),
        ),
        migrations.AlterUniqueTogether(
            name='securityeventsmodels',
            unique_together=set([('type', 'alert')]),
        ),
        migrations.AddField(
            model_name='websitesecurityalertmodel',
            name='events',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='msecurity', to='agents.SecurityEventsModels'),
        ),
    ]
