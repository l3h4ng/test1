# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2018-03-22 02:37
from __future__ import unicode_literals

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import time


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CrawlDataModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(blank=True, max_length=250, null=True)),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('parent_id', models.IntegerField(blank=True, null=True)),
                ('loc_type', models.IntegerField(choices=[(0, 'file'), (1, 'folder')], default=0)),
                ('security_level', models.IntegerField(choices=[(0, 'safe'), (1, 'suspect'), (2, 'malware')], default=0)),
            ],
            options={
                'db_table': 'website_crawl_data',
            },
        ),
        migrations.CreateModel(
            name='GoogleHackingKeywordModels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.IntegerField(auto_created=True, default=time.time)),
                ('category', models.CharField(default='', max_length=250)),
                ('keyword', models.CharField(blank=True, default='', max_length=500)),
                ('google_search', models.CharField(blank=True, default='', max_length=500)),
                ('summary', models.CharField(blank=True, default='', max_length=500)),
            ],
            options={
                'db_table': 'google_hacking_db',
            },
        ),
        migrations.CreateModel(
            name='HostServicesModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_addr', models.CharField(blank=True, max_length=45, null=True)),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
                ('port', models.IntegerField()),
                ('protocol', models.CharField(default='tcp', max_length=45)),
                ('state', models.CharField(default='open', max_length=45)),
                ('version', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'db_table': 'host_services',
            },
        ),
        migrations.CreateModel(
            name='HostsModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_addr', models.CharField(max_length=250)),
                ('severity', models.IntegerField(default=1)),
                ('device_type', models.IntegerField(choices=[(0, 'general purpose'), (1, 'router'), (2, 'firewall'), (3, 'switch'), (4, 'printer'), (5, 'webcam'), (6, 'phone')], default=0)),
                ('status', models.IntegerField(default=0)),
                ('edges', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, default=[], size=None)),
                ('edges_extend', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), blank=True, default=[], size=None)),
            ],
            options={
                'db_table': 'hosts',
            },
        ),
        migrations.CreateModel(
            name='HostVulnerabilityModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detection_time', models.IntegerField(auto_created=True, blank=True, default=time.time)),
                ('name', models.TextField(blank=True, null=True)),
                ('is_fixed', models.BooleanField(default=False)),
                ('is_ignored', models.BooleanField(default=False)),
                ('attack_details', models.TextField(blank=True, default='', null=True)),
                ('port', models.CharField(blank=True, max_length=45, null=True)),
                ('request', models.TextField(blank=True, default='', null=True)),
                ('output', models.TextField(blank=True, default='', null=True)),
                ('affects', models.TextField(blank=True, null=True)),
                ('scanner_scan_id', models.CharField(default='', max_length=100)),
                ('scanner_vuln_id', models.CharField(default='', max_length=100)),
            ],
            options={
                'db_table': 'host_vulnerability',
            },
        ),
        migrations.CreateModel(
            name='ScansModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.IntegerField(auto_created=True, default=time.time, editable=False)),
                ('percent', models.IntegerField(default=0)),
                ('status', models.IntegerField(choices=[(0, b'Kh\xe1\xbb\x9fi t\xe1\xba\xa1o'), (1, b'\xc4\x90ang ch\xe1\xbb\x9d qu\xc3\xa9t'), (2, b'\xc4\x90ang qu\xc3\xa9t'), (3, b'T\xe1\xba\xa1m d\xe1\xbb\xabng'), (4, b'Qu\xc3\xa9t l\xe1\xbb\x97i'), (5, b'Ho\xc3\xa0n th\xc3\xa0nh'), (6, b'Ho\xc3\xa0n th\xc3\xa0nh c\xc6\xa1 b\xe1\xba\xa3n')], default=0)),
                ('scripted_scan', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=225), blank=True, default=[], size=None)),
                ('finish_time', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'scans',
            },
        ),
        migrations.CreateModel(
            name='ServerConfigurationsModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('url', models.CharField(default='', max_length=500)),
                ('protocol', models.CharField(blank=True, default='', max_length=500)),
                ('description', models.TextField(blank=True, null=True)),
                ('ref', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'server_configurations_vulnerability',
            },
        ),
        migrations.CreateModel(
            name='WebsiteBlacklistCheckingModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(0, 'GOOGLE SAFE BROWSING'), (1, 'NOTRTON SAFE WEB'), (2, 'PHISHTANK'), (3, 'OPERA BROWSER'), (4, 'SITEADVISOR'), (5, 'Sucuri Malware Labs'), (6, 'SpamHaus DBL'), (7, 'Yandex'), (8, 'ESET')], default=0)),
                ('result', models.IntegerField(choices=[(0, 'Clean'), (1, 'Warning')], default=0)),
            ],
            options={
                'db_table': 'website_blacklist_check',
            },
        ),
        migrations.CreateModel(
            name='WebsiteContentModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(default=0)),
                ('tag', models.CharField(default='', max_length=50)),
                ('attrib', models.CharField(blank=True, default='', max_length=250)),
                ('content', models.TextField(blank=True, default='')),
                ('position', models.IntegerField(default=0)),
                ('children_counts', models.IntegerField(default=0)),
                ('crawler_time', models.IntegerField(default=0)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='agents.WebsiteContentModel')),
            ],
            options={
                'db_table': 'website_contents',
            },
        ),
        migrations.CreateModel(
            name='WebsiteDatabasesModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('db_type', models.CharField(blank=True, max_length=45, null=True)),
                ('version', models.CharField(blank=True, max_length=45, null=True)),
                ('user', models.CharField(blank=True, max_length=45, null=True)),
                ('password', models.CharField(blank=True, max_length=45, null=True)),
                ('is_db_administrator', models.BooleanField(default=False)),
                ('databases', django.contrib.postgres.fields.jsonb.JSONField(default={})),
            ],
            options={
                'db_table': 'website_database',
            },
        ),
        migrations.CreateModel(
            name='WebsiteGoogleHackingDetectModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.CharField(blank=True, default='', max_length=500)),
                ('total_results', models.IntegerField(blank=True, default=0)),
                ('results', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(default='', max_length=500), blank=True, default=[], size=None)),
                ('keyword', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='websites', to='agents.GoogleHackingKeywordModels')),
            ],
            options={
                'db_table': 'website_ghdb_detect',
            },
        ),
        migrations.CreateModel(
            name='WebsiteMonitorContentModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('new_content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='newcontent', to='agents.WebsiteContentModel')),
                ('old_content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='oldcontent', to='agents.WebsiteContentModel')),
            ],
            options={
                'db_table': 'website_monitor_content',
            },
        ),
        migrations.CreateModel(
            name='WebsiteMonitorStatusModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monitor_time', models.IntegerField(auto_created=True, blank=True, default=time.time, null=True)),
                ('ping_status', models.BooleanField(default=False)),
                ('ping_response', models.IntegerField(blank=True, default=0, max_length=10)),
                ('web_status', models.IntegerField(default=200, max_length=5)),
                ('web_load_response', models.IntegerField(blank=True, default=0, max_length=10)),
            ],
            options={
                'db_table': 'website_monitor_status',
            },
        ),
        migrations.CreateModel(
            name='WebsiteMonitorUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(default='', max_length=100)),
                ('path', models.CharField(default='', max_length=500)),
                ('is_enabled', models.BooleanField(default=True)),
                ('max_level', models.IntegerField(default=3)),
                ('is_training', models.BooleanField(default=True)),
                ('counts', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'website_monitor_urls',
            },
        ),
        migrations.CreateModel(
            name='WebsitePhishingDomainDetectModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(default='', max_length=250)),
                ('is_exits', models.BooleanField(default=False)),
                ('security_level', models.IntegerField(choices=[(0, 'safe'), (1, 'suspect'), (2, 'malware')], default=0)),
                ('ip_addr', models.CharField(blank=True, default='', max_length=500)),
            ],
            options={
                'db_table': 'website_phishing_alert',
            },
        ),
        migrations.CreateModel(
            name='WebsiteSecurityAlertModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.IntegerField(choices=[(0, 'device'), (1, 'ip_addr'), (2, 'service'), (3, 'subdomain'), (4, 'path'), (5, 'vulnerablity')], default=0)),
                ('stauts', models.IntegerField(choices=[(0, 'new'), (1, 'deleted'), (2, 'modify')], default=0)),
                ('details', django.contrib.postgres.fields.jsonb.JSONField(default={})),
            ],
            options={
                'db_table': 'website_monitor_security',
            },
        ),
        migrations.CreateModel(
            name='WebsiteStaticContentModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('url_monitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contents', to='agents.WebsiteMonitorUrl')),
            ],
            options={
                'db_table': 'website_static_contents',
            },
        ),
        migrations.CreateModel(
            name='WebsiteSubdomainsModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subdomain', models.CharField(max_length=200)),
                ('ip_addr', models.CharField(default='', max_length=200)),
                ('is_monitor', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'website_subdomains',
            },
        ),
        migrations.CreateModel(
            name='WebsiteTechnologiesModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('technology', models.CharField(default='', max_length=200)),
                ('app', models.CharField(blank=True, default='', max_length=200)),
                ('version', models.CharField(blank=True, default='', max_length=20)),
            ],
            options={
                'db_table': 'website_technology',
            },
        ),
        migrations.CreateModel(
            name='HostDetailsModel',
            fields=[
                ('host', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='details', serialize=False, to='agents.HostsModel')),
                ('hostname', models.CharField(blank=True, max_length=250, null=True)),
                ('os', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, default=[], size=None)),
                ('last_boot', models.CharField(blank=True, max_length=45, null=True)),
                ('mac_addr', models.CharField(blank=True, max_length=45, null=True)),
                ('ipv4', models.CharField(blank=True, max_length=45, null=True)),
                ('ipv6', models.CharField(blank=True, max_length=45, null=True)),
                ('vendor', models.CharField(blank=True, max_length=45, null=True)),
                ('status', models.CharField(blank=True, max_length=45, null=True)),
                ('state', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'host_details',
            },
        ),
        migrations.CreateModel(
            name='HostStatisticsModel',
            fields=[
                ('host', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='statistics', serialize=False, to='agents.HostsModel')),
                ('ip_addr', models.CharField(blank=True, max_length=45, null=True)),
                ('services_count', models.IntegerField(default=0)),
                ('subdomains_count', models.IntegerField(default=0)),
                ('paths_count', models.IntegerField(default=0)),
                ('server_configs_count', models.IntegerField(default=0)),
                ('db_attack_count', models.IntegerField(default=0)),
                ('vulns_count', models.IntegerField(default=0)),
                ('high_count', models.IntegerField(default=0)),
                ('medium_count', models.IntegerField(default=0)),
                ('low_count', models.IntegerField(default=0)),
                ('info_count', models.IntegerField(default=0)),
                ('critical_count', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'host_statistics',
            },
        ),
        migrations.AddField(
            model_name='websitetechnologiesmodel',
            name='website',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='technologies', to='agents.HostsModel'),
        ),
        migrations.AddField(
            model_name='websitesubdomainsmodel',
            name='website',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subdomains', to='agents.HostsModel'),
        ),
        migrations.AddField(
            model_name='websitesecurityalertmodel',
            name='host',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='msecurities', to='agents.HostsModel'),
        ),
        migrations.AddField(
            model_name='websitephishingdomaindetectmodel',
            name='website',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phishing', to='agents.HostsModel'),
        ),
        migrations.AlterUniqueTogether(
            name='websitemonitorurl',
            unique_together=set([('url', 'path')]),
        ),
        migrations.AddField(
            model_name='websitemonitorstatusmodel',
            name='website',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mstatus', to='agents.HostsModel'),
        ),
        migrations.AddField(
            model_name='websitemonitorcontentmodel',
            name='url_monitor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mcontents', to='agents.WebsiteMonitorUrl'),
        ),
        migrations.AddField(
            model_name='websitegooglehackingdetectmodel',
            name='website',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ghdb', to='agents.HostsModel'),
        ),
        migrations.AddField(
            model_name='websitedatabasesmodel',
            name='website',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='database', to='agents.HostsModel'),
        ),
        migrations.AddField(
            model_name='websitecontentmodel',
            name='url_monitor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contents', to='agents.WebsiteMonitorUrl'),
        ),
        migrations.AddField(
            model_name='websiteblacklistcheckingmodel',
            name='website',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blacklist', to='agents.HostsModel'),
        ),
        migrations.AddField(
            model_name='serverconfigurationsmodel',
            name='website',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='config_vulns', to='agents.HostsModel'),
        ),
    ]
